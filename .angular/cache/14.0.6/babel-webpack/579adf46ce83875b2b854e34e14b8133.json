{"ast":null,"code":"import './polyfills';\nimport { CommonModule } from '@angular/common'; // includes NgIf and TitleCasePipe\n\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { ImageComponent } from './app/image.component';\nimport { HighlightDirective } from './app/highlight.directive';\nimport { TableComponent } from './app/table/table.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/card\";\nexport let ExampleStandaloneComponent = /*#__PURE__*/(() => {\n  class ExampleStandaloneComponent {\n    constructor() {\n      this.name = 'Carlos Sinhue Garcia Hernandez';\n    }\n\n  }\n\n  ExampleStandaloneComponent.ɵfac = function ExampleStandaloneComponent_Factory(t) {\n    return new (t || ExampleStandaloneComponent)();\n  };\n\n  ExampleStandaloneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExampleStandaloneComponent,\n    selectors: [[\"app-root\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 6,\n    vars: 3,\n    consts: [[\"app-highlight\", \"\"]],\n    template: function ExampleStandaloneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"h2\", 0);\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"titlecase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"app-table\")(5, \"app-image-component\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, ctx.name));\n      }\n    },\n    dependencies: [// import standalone Components, Directives and Pipes\n    ImageComponent, TableComponent, HighlightDirective, // or NgModules like Angular Material\n    CommonModule, i1.TitleCasePipe, MatCardModule, i2.MatCard],\n    encapsulation: 2\n  });\n  return ExampleStandaloneComponent;\n})();\nbootstrapApplication(ExampleStandaloneComponent).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n\n  window['ngRef'] = ref; // Otherwise, log the boot error\n}).catch(err => console.error(err));","map":null,"metadata":{},"sourceType":"module"}